{"is_source_file": true, "format": "C#", "description": "This file defines the INoteService interface, which specifies asynchronous methods for creating, retrieving, listing, updating, and deleting notes associated with a user in the notes backend application.", "external_files": ["NotesBackend.Domain.Entities"], "external_methods": [], "published": ["INoteService"], "classes": [{"name": "INoteService", "description": "Interface providing contract for note operations for a specific user."}], "methods": [{"name": "CreateAsync", "description": "Creates a new note for a user with the specified ownerId, title, and content."}, {"name": "GetAsync", "description": "Retrieves a specific note by noteId for the user with ownerId."}, {"name": "ListAsync", "description": "Lists notes for the user with ownerId, supporting pagination through page and pageSize."}, {"name": "UpdateAsync", "description": "Updates an existing note identified by noteId for the user with ownerId."}, {"name": "DeleteAsync", "description": "Deletes the note identified by noteId for the user with ownerId."}], "calls": ["Task<Note>.CreateAsync", "Task<Note?>.GetAsync", "Task<(IEnumerable<Note> items, int total)>.ListAsync", "Task<Note?>.UpdateAsync", "Task<bool>.DeleteAsync"], "search-terms": ["INoteService", "note operations", "async methods", "NotesBackend.Application.Notes", "C# interface", "note CRUD", "NotesBackend.Domain.Entities"], "state": 2, "file_id": 19, "knowledge_revision": 39, "git_revision": "", "hash": "c5959bcd9b36d05c93d7c75eeb1d4165", "format-version": 4, "code-base-name": "notes_backend", "filename": "notes_backend/Application/Notes/INoteService.cs", "revision_history": [{"39": ""}]}